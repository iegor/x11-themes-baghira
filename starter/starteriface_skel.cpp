/****************************************************************************
**
** DCOP Skeleton generated by dcopidl2cpp from starteriface.kidl
**
** WARNING! All changes made in this file will be lost!
**
*****************************************************************************/

#include "./starteriface.h"

#include <kdatastream.h>


static const char* const StarterIface_ftable[3][3] = {
    { "void", "popupMenu()", "popupMenu()" },
    { "void", "showMenu()", "showMenu()" },
    { 0, 0, 0 }
};
static const int StarterIface_ftable_hiddens[2] = {
    0,
    0,
};

bool StarterIface::process(const QCString &fun, const QByteArray &data, QCString& replyType, QByteArray &replyData)
{
    if ( fun == StarterIface_ftable[0][1] ) { // void popupMenu()
	replyType = StarterIface_ftable[0][0]; 
	popupMenu( );
    } else if ( fun == StarterIface_ftable[1][1] ) { // void showMenu()
	replyType = StarterIface_ftable[1][0]; 
	showMenu( );
    } else {
	return DCOPObject::process( fun, data, replyType, replyData );
    }
    return true;
}

QCStringList StarterIface::interfaces()
{
    QCStringList ifaces = DCOPObject::interfaces();
    ifaces += "StarterIface";
    return ifaces;
}

QCStringList StarterIface::functions()
{
    QCStringList funcs = DCOPObject::functions();
    for ( int i = 0; StarterIface_ftable[i][2]; i++ ) {
	if (StarterIface_ftable_hiddens[i])
	    continue;
	QCString func = StarterIface_ftable[i][0];
	func += ' ';
	func += StarterIface_ftable[i][2];
	funcs << func;
    }
    return funcs;
}


