/****************************************************************************
**
** DCOP Skeleton generated by dcopidl2cpp from menuapplet.kidl
**
** WARNING! All changes made in this file will be lost!
**
*****************************************************************************/

#include "./menuapplet.h"

#include <kdatastream.h>

namespace KickerMenuApplet {

static const char* const Applet_ftable[3][3] = {
    { "ASYNC", "configure()", "configure()" },
    { "void", "showWindowList()", "showWindowList()" },
    { 0, 0, 0 }
};
static const int Applet_ftable_hiddens[2] = {
    0,
    0,
};

bool Applet::process(const QCString &fun, const QByteArray &data, QCString& replyType, QByteArray &replyData)
{
    if ( fun == Applet_ftable[0][1] ) { // void configure()
	replyType = Applet_ftable[0][0]; 
	configure( );
    } else if ( fun == Applet_ftable[1][1] ) { // void showWindowList()
	replyType = Applet_ftable[1][0]; 
	showWindowList( );
    } else {
	return DCOPObject::process( fun, data, replyType, replyData );
    }
    return true;
}

QCStringList Applet::interfaces()
{
    QCStringList ifaces = DCOPObject::interfaces();
    ifaces += "KickerMenuApplet::Applet";
    return ifaces;
}

QCStringList Applet::functions()
{
    QCStringList funcs = DCOPObject::functions();
    for ( int i = 0; Applet_ftable[i][2]; i++ ) {
	if (Applet_ftable_hiddens[i])
	    continue;
	QCString func = Applet_ftable[i][0];
	func += ' ';
	func += Applet_ftable[i][2];
	funcs << func;
    }
    return funcs;
}

} // namespace

